<section
	class="cloudflare caching enable_query_string_sort initialize loading"
	data-endpoint="<?php echo $block->getApiEndpoint () ?>"
	data-form-key="<?php echo $block->getFormKey () ?>"
	data-tab-name="caching"
	data-section-name="enable_query_string_sort" >
	<div class="row" >
		<div class="wrapper_left" >
			<span class="section_title" >Enable Query String Sort</span>
			<p>Cloudflare will treat files with the same query strings as the same file in cache, regardless of the order of the query strings.</p>
		</div>
		<div class="wrapper_right" >
			<div>
				<label class="switch" >
					<input class="trigger" type="checkbox" name="mode" data-target="toggle" />
					<span class="knob" ></span>
				</label>
			</div>
			<div class="lightbox" style="background-image: url(<?php echo $block->getViewFileUrl ('JetRails_Cloudflare/images/loading.svg') ?>)" > </div>
		</div>
	</div>
	<div class="row collapsable" >
		<div class="wrapper_bottom" >
			<a data-tab="help" >Help</a>
		</div>
		<div data-tab-content="help" >
			<h4>How does Query String Sort make my website faster?</h4>
			<p>When set to "On", this feature enables query strings to be sorted before they hit Cloudflare's cache for increased cache hit rates.</p>
			<p> Today, we treat URLs query strings that are in different orders as separate files in the cache. This mean that if one user requests:</p>
			<code>/video/48088296?title=0&byline=0&portrait=0&color=51a516</code>
			<p>And another user requests:</p>
			<code>/video/48088296?byline=0&color=51a516&portrait=0&title=0</code>
			<p>We will go back to the origin, even though we have the file in our cache. </p>
			<p>Query String Sort will sort the query strings before they hit our cache resulting in a higher cache hit rate.</p>
		</div>
	</div>
</section>
